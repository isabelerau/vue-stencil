{"version":3,"file":"loading-component.my-component.entry.js","sources":["src/components/loading-component/loading-component.css?tag=loading-component&encapsulation=shadow","src/components/loading-component/loading-component.tsx","src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[".container {\n  padding: 20px;\n  border: 1px solid #ccc;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\nli {\n  margin: 5px 0;\n}","import { Component, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'loading-component',\n  styleUrl: 'loading-component.css',\n  shadow: true,\n})\nexport class LoadingComponent {\n  @State() data: string[] = [];\n  @State() isLoading: boolean = true;\n  async componentWillLoad() {\n    this.isLoading = true;\n    const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const todos = await response.json();\n    this.data = todos.slice(0, 5).map(todo => todo.title);\n    this.isLoading = false;\n  }\n  render() {\n    return (\n      <div class=\"container\">\n        <h1>Todos</h1>\n        {this.isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <ul>\n            {this.data.map(title => (\n              <li>{title}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}",".container {\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\nh1 {\n  color: #007bff;\n}\nbutton {\n  padding: 8px 16px;\n  background: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\nbutton:hover {\n  background: #0056b3;\n}","import { Component, Prop, h, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyComponent {\n  @Prop() name: string = 'Guest';\n  @State() inputValue: string = '';\n  @Event() nameChanged: EventEmitter<string>;\n  handleInput(e: Event) {\n    this.inputValue = (e.target as HTMLInputElement).value;\n    this.nameChanged.emit(this.inputValue);\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <h1>Hello, {this.name}!</h1>\n        <input type=\"text\" value={this.inputValue} onInput={e => this.handleInput(e)} placeholder=\"Enter name\" />\n      </div>\n    );\n  }\n}\n\n"],"names":[],"mappings":";;AAAA,MAAM,mBAAmB,GAAG,6FAA6F;;MCO5G,gBAAgB,GAAA,MAAA;;;;IAClB,IAAI,GAAa,EAAE;IACnB,SAAS,GAAY,IAAI;AAClC,IAAA,MAAM,iBAAiB,GAAA;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AACrB,QAAA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,4CAA4C,CAAC;AAC1E,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE;QACnC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;AACrD,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;;IAExB,MAAM,GAAA;AACJ,QAAA,QACE,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,WAAW,EAAA,EACpB,CAAc,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EAAA,OAAA,CAAA,EACb,IAAI,CAAC,SAAS,IACb,CAAA,CAAA,GAAA,EAAA,IAAA,EAAA,YAAA,CAAiB,KAEjB,CAAA,CAAA,IAAA,EAAA,IAAA,EACG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,KAClB,CAAA,CAAA,IAAA,EAAA,IAAA,EAAK,KAAK,CAAM,CACjB,CAAC,CACC,CACN,CACG;;;;;AC9BZ,MAAM,cAAc,GAAG,qMAAqM;;MCO/M,WAAW,GAAA,MAAA;;;;;IACd,IAAI,GAAW,OAAO;IACrB,UAAU,GAAW,EAAE;AACvB,IAAA,WAAW;AACpB,IAAA,WAAW,CAAC,CAAQ,EAAA;QAClB,IAAI,CAAC,UAAU,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK;QACtD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;;IAGxC,MAAM,GAAA;AACJ,QAAA,QACE,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,WAAW,EAAA,EACpB,CAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,aAAY,IAAI,CAAC,IAAI,EAAO,GAAA,CAAA,EAC5B,CAAA,CAAA,OAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,EAAC,YAAY,EAAG,CAAA,CACrG;;;;;;;"}